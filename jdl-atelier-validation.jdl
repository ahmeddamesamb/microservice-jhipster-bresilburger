
application {
  config {
    baseName gateway
    applicationType gateway
    packageName app.gateway
    authenticationType oauth2
    prodDatabaseType postgresql
    serverPort 8081
    buildTool maven
    clientFramework angular
    cacheProvider ehcache
    databaseType sql
    enableHibernateCache true
    enableTranslation true
    jhiPrefix eugb
    languages [fr, en]
    nativeLanguage fr
  }
  entities *
}

application {
  config {
    baseName service_gestion_menus
    applicationType microservice
    packageName app.service_gestion_menus
    authenticationType oauth2
    buildTool maven
    prodDatabaseType postgresql
    serverPort 8082
    cacheProvider ehcache
    databaseType sql
    enableHibernateCache true
    enableTranslation true
    jhiPrefix restaurant
  }
  entities Menu
}
application {
  config {
    baseName service_gestion_livraisons
    applicationType microservice
    packageName app.service_gestion_livraisons
    authenticationType oauth2
    buildTool maven
    prodDatabaseType postgresql
    serverPort 8083
    cacheProvider ehcache
    databaseType sql
    enableHibernateCache true
    enableTranslation true
    jhiPrefix restaurant
  }
  entities livraison
}
application {
  config {
    baseName service_gestion_livreurs
    applicationType microservice
    packageName app.service_gestion_livreurs
    authenticationType oauth2
    buildTool maven
    prodDatabaseType postgresql
    serverPort 8084
    cacheProvider ehcache
    databaseType sql
    enableHibernateCache true
    enableTranslation true
    jhiPrefix restaurant
  }
  entities Livreur
}
application {
  config {
    baseName service_gestion_stocks
    applicationType microservice
    packageName app.service_gestion_stocks
    authenticationType oauth2
    buildTool maven
    prodDatabaseType postgresql
    serverPort 8085
    cacheProvider ehcache
    databaseType sql
    enableHibernateCache true
    enableTranslation true
    jhiPrefix restaurant
  }
  entities Ingredient
}

application {
  config {
    baseName service_gestion_paiements
    applicationType microservice
    packageName app.service_gestion_paiements
    authenticationType oauth2
    buildTool maven
    prodDatabaseType postgresql
    serverPort 8086
    cacheProvider ehcache
    databaseType sql
    enableHibernateCache true
    enableTranslation true
    jhiPrefix restaurant
  }
  entities Paiement
}

application {
  config {
    baseName service_gestion_commandes
    applicationType microservice
    packageName app.service_gestion_commandes
    authenticationType oauth2
    buildTool maven
    prodDatabaseType mysql
    serverPort 8087
    cacheProvider ehcache
    databaseType sql
    enableHibernateCache true
    enableTranslation true
    jhiPrefix restaurant
  }
  entities commande
}
application {
  config {
    baseName service_gestion_utilisateurs
    applicationType microservice
    packageName app.service_gestion_utilisateurs
    authenticationType oauth2
    buildTool maven
    prodDatabaseType mysql
    serverPort 8087
    cacheProvider ehcache
    databaseType sql
    enableHibernateCache true
    enableTranslation true
    jhiPrefix restaurant
  }
  entities Client, Gestionaire, Livreur
}

entity Livreur {
	nomComplet String,
	email String,
  password String,
	status String,
  userId Long
}

entity Client {
	nomComplet String,
	email String,
  password String,
	status String,
  userId Long
}
entity Gestionaire {
	nom String,
	prenom String,
	email String,
	dateNaissaance Instant,
  userId Long
}

entity Menu {
	nom String,
  description String,
  listPlat String

}

entity livraison {
    status String,
    commandeId Long 
    livreurId Long
}
entity commande {
    statuscommande String,
    listecommande String,
    clientId Long 
}

entity Paiement {
	code String,
	montantPaiement Integer,
  statusPaiement String,
  methodePaiement String
  commandeId Long 
}
entity Ingredient {
	code String,
  nomIngredient String,
  quantite String
  commandeId Long 
}


relationship OneToOne {
    Ia to Etudiant,
    Ia to Formation
}


dto * with mapstruct
service * with serviceClass
paginate * with pagination

microservice Etudiant, Formation, Ia with gir
microservice Ue, Ip with service_gestion_menus
microservice Salle with service_gestion_livreurs
microservice Salle with service_gestion_stocks
microservice Salle with service_gestion_utilisateurs
microservice Salle with service_gestion_commandes
microservice Salle with service_gestion_paiements