
application {
  config {
    baseName gateway
    applicationType gateway
    packageName app.gateway
    authenticationType oauth2
    prodDatabaseType postgresql
    serverPort 8081
    buildTool maven
    clientFramework angular
    cacheProvider ehcache
    databaseType sql
    enableHibernateCache true
    enableTranslation true
    jhiPrefix eugb
    languages [fr, en]
    nativeLanguage fr
  }
  entities *
}

application {
  config {
    baseName service_gestion_menus
    applicationType microservice
    packageName app.service_gestion_menus
    authenticationType oauth2
    buildTool maven
    prodDatabaseType postgresql
    serverPort 8082
    cacheProvider ehcache
    databaseType sql
    enableHibernateCache true
    enableTranslation true
    jhiPrefix restaurant
  }
  entities Menu
}
application {
  config {
    baseName service_gestion_livraisons
    applicationType microservice
    packageName app.service_gestion_livraisons
    authenticationType oauth2
    buildTool maven
    prodDatabaseType postgresql
    serverPort 8083
    cacheProvider ehcache
    databaseType sql
    enableHibernateCache true
    enableTranslation true
    jhiPrefix restaurant
  }
  entities Livraison
}

application {
  config {
    baseName service_gestion_stocks
    applicationType microservice
    packageName app.service_gestion_stocks
    authenticationType oauth2
    buildTool maven
    prodDatabaseType postgresql
    serverPort 8085
    cacheProvider ehcache
    databaseType sql
    enableHibernateCache true
    enableTranslation true
    jhiPrefix restaurant
  }
//  entities Ingredient
}

application {
  config {
    baseName service_gestion_paiements
    applicationType microservice
    packageName app.service_gestion_paiements
    authenticationType oauth2
    buildTool maven
    prodDatabaseType postgresql
    serverPort 8086
    cacheProvider ehcache
    databaseType sql
    enableHibernateCache true
    enableTranslation true
    jhiPrefix restaurant
  }
  entities Paiement
}
application {
  config {
    baseName service_gestion_produits
    applicationType microservice
    packageName app.service_gestion_produits
    authenticationType oauth2
    buildTool maven
    prodDatabaseType postgresql
    serverPort 8085
    cacheProvider ehcache
    databaseType sql
    enableHibernateCache true
    enableTranslation true
    jhiPrefix restaurant
  }
  entities Produit,Boisson,Burger,Frite
}

application {
  config {
    baseName service_gestion_commandes
    applicationType microservice
    packageName app.service_gestion_commandes
    authenticationType oauth2
    buildTool maven
    prodDatabaseType mysql
    serverPort 8087
    cacheProvider ehcache
    databaseType sql
    enableHibernateCache true
    enableTranslation true
    jhiPrefix restaurant
  }
  entities Commande,LigneCommande
}
application {
  config {
    baseName service_gestion_utilisateurs
    applicationType microservice
    packageName app.service_gestion_utilisateurs
    authenticationType oauth2
    buildTool maven
    prodDatabaseType mysql
    serverPort 8087
    cacheProvider ehcache
    databaseType sql
    enableHibernateCache true
    enableTranslation true
    jhiPrefix restaurant
  }
  entities Client, Gestionaire, Livreur
}

entity Livreur {
	matriculeMoto String,
}
entity Client {
	adresse String,
}
entity Gestionaire {
	dateNaissaance Instant,
}

entity Menu {
    nom String,
    description String,
}
entity Livraison {
    status String,
}
entity Commande {
    statuscommande String,
    listecommande String,
    clientId Long 
}

entity Paiement {
    code String,
    montantPaiement Integer,
    statusPaiement String,
    methodePaiement String
}

entity Livraison {
    code String,
    nomIngredient String,
    quantite String
}
entity Produit {
    image String,
    nom String,
    prix String,
    etat String
}
entity Frite {
}
entity Burger {
}
entity MenuBurger {
  quantite String,
}
entity MenuFrite {
  quantite String,
}
entity Boisson {
}
entity Taille {
  libelle String,
  prix String,
}
entity TailleBoisson {
  quantiteStock String,
}
entity Boisson {
}
entity Catalogue {
}
entity LigneCommande {
}
entity Zone {
  nom String,
  coutLivraison String,
  etatLivraison String,
}

relationship ManyToOne {
  MenuBurger{menu} to Menu,
  MenuFrite{menu} to Menu,
  TailleBoisson{taille} to Taille,
  Commande{clientId(Long)} to Client,
}

relationship OneToMany {
  LigneCommande{commande} to Commande{listecommande(String)},
}

relationship ManyToMany {
  Menu{produits} to Produit{menus},
}

relationship OneToOne {
  Livraison{livreur(matriculeMoto)} to Livreur,
  Client{gestionaire(dateNaissaance)} to Gestionaire,
  Paiement{commande(code)} to Commande,
  Livraison{menu(nom)} to Menu,
}



dto * with mapstruct
service * with serviceClass
paginate * with pagination

microservice Menu with service_gestion_menus
microservice Gestionaire,Client,Livreur with service_gestion_utilisateurs
microservice Commande,LigneCommande with service_gestion_commandes
microservice Livraison with service_gestion_livraisons
microservice Paiement with service_gestion_paiements
microservice Produit,Boisson,Burger,Frite with service_gestion_produits